version: "3"
services:
    # Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    # Vue UI
    vue-ui:
        build:
            context: ./vue
            dockerfile: Dockerfile
        stdin_open: true
        tty: true
        ports:
            - "8080:8080"
        container_name: vue-ui
        volumes:
            - ./vue:/usr/src/app
            - /usr/src/app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true
        networks:
            - app-network
        depends_on:
            - api

    # PHP Service
    api:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: api
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
            - db-network
        depends_on:
            - db

    # MySQL Service
    db:
        image: mysql:5.7.22
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        env_file:
            - ".env"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - db-network

# Volumes
volumes:
    dbdata:
        driver: local

# Docker Networks
networks:
    app-network:
        driver: bridge
    db-network:
        driver: bridge
